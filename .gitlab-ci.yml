image: alpine:latest

variables:
  FILE_NAME: net.bluwizard.poipresets_${CI_COMMIT_TAG}
  RELEASE_DESCRIPTION: |
    ### Collection of Material Presets for Poiyomi Toon Shader.
stages:
  - deploy

zip-asset:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    PROJECT_API_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}"
    PROJECT_URL: "${CI_SERVER_URL}/${CI_PROJECT_PATH}"
    PACKAGE_URL: "${CI_SERVER_URL}/${CI_PROJECT_PATH}/-/releases/${CI_COMMIT_TAG}/downloads/package"
  before_script:
    - apk add --update zip curl jq sudo
    - curl --location --output /usr/local/bin/release-cli "https://gitlab.com/api/v4/projects/gitlab-org%2Frelease-cli/packages/generic/release-cli/latest/release-cli-linux-amd64"
    - sudo chmod +x /usr/local/bin/release-cli
    - release-cli -v
  script:
    - echo "Preparing asset..."
    # by default add all non-hidden files (the . notation) to distribution zip
    - find -name ".?*" -prune -o -print | zip -@ ./${FILE_NAME}.zip
    # modify the above to handle whatever files you need for your own project
    - wc -c < "${FILE_NAME}.zip"
    - echo "Uploading asset to ${PROJECT_API_URL}/uploads"
    - |
      curl -# --header "PRIVATE-TOKEN: ${CI_PRIVATE_TOKEN}" --form "file=@${FILE_NAME}.zip" "${PROJECT_API_URL}/uploads" > uploaded.json
    - ASSET_URL=${PROJECT_URL}$(jq -r '.url' uploaded.json)
    - echo "Asset URL - $ASSET_URL"
    - |
      curl -# --request DELETE --header "PRIVATE-TOKEN: ${CI_PRIVATE_TOKEN}" "${PROJECT_API_URL}/releases/${CI_COMMIT_TAG}"
    - |
      release-cli create --name "Release for ${CI_COMMIT_TAG}" \
        --tag-name ${CI_COMMIT_TAG} \
        --description "${RELEASE_DESCRIPTION}" \
        --assets-link "{\"name\":\"${FILE_NAME}.zip\",\"url\":\"$ASSET_URL\",\"filepath\":\"/package\",\"link_type\":\"package\"}"
    - echo "Package release asset - ${PACKAGE_URL}"
